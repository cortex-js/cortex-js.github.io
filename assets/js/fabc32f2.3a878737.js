"use strict";(globalThis.webpackChunkcortexjs_io=globalThis.webpackChunkcortexjs_io||[]).push([[4246],{4859:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>d,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"compute-engine/reference-logic","title":"Logic","description":"Constants","source":"@site/docs/compute-engine/89-reference-logic.md","sourceDirName":"compute-engine","slug":"/compute-engine/reference/logic/","permalink":"/compute-engine/reference/logic/","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1737956976000,"sidebarPosition":89,"frontMatter":{"title":"Logic","slug":"/compute-engine/reference/logic/","date":"Last Modified"},"sidebar":"docSidebar","previous":{"title":"Linear Algebra","permalink":"/compute-engine/reference/linear-algebra/"},"next":{"title":"Sets","permalink":"/compute-engine/reference/sets/"}}');var s=l(4848),i=l(8453);const d={title:"Logic",slug:"/compute-engine/reference/logic/",date:"Last Modified"},r=void 0,c={},a=[{value:"Constants",id:"constants",level:2},{value:"Logical Operators",id:"logical-operators",level:2},{value:"Quantifiers",id:"quantifiers",level:2}];function x(e){const t={code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components},{FunctionDefinition:l,Latex:n,Signature:d}=t;return l||o("FunctionDefinition",!0),n||o("Latex",!0),d||o("Signature",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"constants",children:"Constants"}),"\n",(0,s.jsx)("div",{className:"symbols-table first-column-header",style:{"--first-col-width":"12ch"},children:(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Symbol"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"LaTeX"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Notation"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"True"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"\\top"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:"\\top"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\u2019\u2019"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"\\mathsf{T}"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:" \\mathsf{T}"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\u2019\u2019"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"\\operator{True}"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:" \\operatorname{True}"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"False"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"\\bot"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:"\\bot"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\u2019\u2019"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"\\mathsf{F}"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:" \\mathsf{F}"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\u2019\u2019"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"\\operatorname{False}"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:" \\operatorname{False}"})})]})]})]})}),"\n",(0,s.jsx)(t.h2,{id:"logical-operators",children:"Logical Operators"}),"\n",(0,s.jsx)("div",{className:"symbols-table first-column-header",style:{"--first-col-width":"12ch"},children:(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Symbol"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"LaTeX"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Notation"}),(0,s.jsx)(t.th,{style:{textAlign:"left"}})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"And"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"p \\land q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:" p \\land q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Conjunction"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\u2019\u2019"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"p \\operatorname{and} q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:" p \\operatorname{and} q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"Or"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"p \\lor q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:" p \\lor q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Disjunction"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\u2019\u2019"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"p \\operatorname{or} q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:" p \\operatorname{or} q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"Xor"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"p \\veebar q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:" p \\veebar q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Exclusive Or"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"Nand"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"p \\barwedge q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:" p \\barwedge q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Not And"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"Nor"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:'p \\char"22BD q'})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:' p \\char"22BD q'})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Not Or"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"Not"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"\\lnot p"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:" \\lnot p"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Negation"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\u2019\u2019"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"\\operatorname{not} p"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:" \\operatorname{not} p"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"Equivalent"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"p \\iff q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:" p \\iff q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\u2019\u2019"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"p \\Leftrightarrow q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:" p \\Leftrightarrow q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"Implies"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"p \\implies q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:"p \\implies q "})}),(0,s.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\u2019\u2019"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"p \\Rightarrow q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:"p \\Rightarrow q "})}),(0,s.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"Proves"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"p \\vdash q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:"p \\vdash q "})}),(0,s.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"Entails"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"p \\vDash q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:"p \\vDash q "})}),(0,s.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"Satisfies"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"p \\models q"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{className:"language-math math-inline",children:"p \\models q "})}),(0,s.jsx)(t.td,{style:{textAlign:"left"}})]})]})]})}),"\n",(0,s.jsx)(t.h2,{id:"quantifiers",children:"Quantifiers"}),"\n",(0,s.jsxs)(l,{name:"ForAll",children:[(0,s.jsxs)(d,{name:"ForAll",children:[(0,s.jsx)(t.em,{children:"condition"}),", ",(0,s.jsx)(t.em,{children:"predicate"})]}),(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"ForAll"})," function represents the ",(0,s.jsx)(t.strong,{children:"universal quantifier"}),"."]}),(0,s.jsx)(t.p,{children:"The condition is the variable or variables that are being quantified over or\nthe set of elements that the variable can take."}),(0,s.jsx)(t.p,{children:"The predicate is the statement that is being quantified."}),(0,s.jsx)(t.p,{children:"The condition and the predicate are separated by a comma, a colon, or a vertical bar. The predicate can also be enclosed in parentheses after the condition."}),(0,s.jsx)(n,{value:"\\forall x, x + 1 > x"}),(0,s.jsx)(n,{value:"\\forall x: x + 1 > x"}),(0,s.jsx)(n,{value:"\\forall x\\mid x + 1 > x"}),(0,s.jsx)(n,{value:"\\forall x( x + 1 > x)"}),(0,s.jsx)(n,{value:"\\forall x \\in \\R, x + 1 > x"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",metastring:"example",children:'["ForAll", "x", ["Greater", ["Add", "x", 1], "x"]]\n\n["ForAll", ["Element", "x", "RealNumbers"], ["Greater", ["Square", "x"], 0]]\n'})})]}),"\n",(0,s.jsxs)(l,{name:"Exists",children:[(0,s.jsxs)(d,{name:"Exists",children:[(0,s.jsx)(t.em,{children:"condition"}),", ",(0,s.jsx)(t.em,{children:"predicate"})]}),(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"Exists"})," function represents the ",(0,s.jsx)(t.strong,{children:"existential quantifier"}),"."]}),(0,s.jsx)(t.p,{children:"The condition is the variable or variables that are being quantified over, and the predicate is the statement that is being quantified."}),(0,s.jsx)(t.p,{children:"The condition and the predicate are separated by a comma, a colon, or a vertical bar. The predicate can also be enclosed in parentheses after the condition."}),(0,s.jsx)(n,{value:"\\exists x, x^2 = 1"}),(0,s.jsx)(n,{value:"\\exists x: x^2 = 1"}),(0,s.jsx)(n,{value:"\\exists x\\mid x^2 = 1"}),(0,s.jsx)(n,{value:"\\exists x( x^2 = 1)"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",metastring:"example",children:'["Exists", "x", ["Equal", ["Square", "x"], 1]]\n\n["Exists", ["Element", "x", "RealNumbers"], ["Equal", ["Square", "x"], 1]]\n'})}),(0,s.jsxs)(d,{name:"ExistsUnique",children:[(0,s.jsx)(t.em,{children:"condition"}),", ",(0,s.jsx)(t.em,{children:"predicate"})]}),(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"ExistsUnique"})," function represents the ",(0,s.jsx)(t.strong,{children:"unique existential quantifier"}),"."]}),(0,s.jsx)(n,{value:"\\exists! x, x^2 = 1"})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}function o(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,t,l)=>{l.d(t,{R:()=>d,x:()=>r});var n=l(6540);const s={},i=n.createContext(s);function d(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);