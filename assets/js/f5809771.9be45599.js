"use strict";(self.webpackChunkcortexjs_io=self.webpackChunkcortexjs_io||[]).push([[6572],{2708:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"mathfield/shortcuts","title":"Keybindings and Inline Shortcuts","description":"Keybindings","source":"@site/docs/mathfield/15-shortcuts.md","sourceDirName":"mathfield","slug":"/mathfield/guides/shortcuts/","permalink":"/mathfield/guides/shortcuts/","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1731785970000,"sidebarPosition":15,"frontMatter":{"date":"Last Modified","title":"Keybindings and Inline Shortcuts","slug":"/mathfield/guides/shortcuts/","toc_max_heading_level":2},"sidebar":"docSidebar","previous":{"title":"Virtual Keyboard","permalink":"/mathfield/guides/virtual-keyboard/"},"next":{"title":"Fill-in-the-Blank","permalink":"/mathfield/guides/fill-in-the-blank/"}}');var i=t(4848),r=t(8453);const o={date:"Last Modified",title:"Keybindings and Inline Shortcuts",slug:"/mathfield/guides/shortcuts/",toc_max_heading_level:2},a=void 0,c={},d=[{value:"Keybindings",id:"keybindings",level:2},{value:"International Keyboards",id:"international-keyboards",level:3},{value:"Inline Shortcuts",id:"inline-shortcuts",level:2},{value:"Multicharacter Identifiers",id:"multicharacter-identifiers",level:2},{value:"Customizing the Inline Shortcut Sensitivity",id:"customizing-the-inline-shortcut-sensitivity",level:2},{value:"ASCIIMath Inline Shortcuts",id:"asciimath-inline-shortcuts",level:2}];function h(e){const n={a:"a",code:"code","code-playground":"code-playground",div:"div",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},t=n["code-playground"],{Icon:s,ReadMore:o}=n;return s||u("Icon",!0),o||u("ReadMore",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"keybindings",children:"Keybindings"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.strong,{children:"key binding"})," is a combination of keys pressed simultaneously on a physical\nkeyboard that triggers a command."]}),"\n",(0,i.jsxs)(n.p,{children:["For example, pressing the ",(0,i.jsx)("kbd",{children:"Alt/Option/\u2325"})," key and the ",(0,i.jsx)("kbd",{children:"V"})," key at the\nsame time will insert a square root. Pressing the ",(0,i.jsx)("kbd",{children:"Control/Command/\u2318"}),"\nkey and the ",(0,i.jsx)("kbd",{children:"Z"})," key at the same time will undo the last command."]}),"\n",(0,i.jsxs)(n.p,{children:["There is an extensive set of ",(0,i.jsx)(n.a,{href:"/mathfield/reference/keybindings",children:"default keybindings"}),"\navailable."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"To override, customize or add to the list of supported keybindings"}),", set\nthe ",(0,i.jsx)(n.code,{children:"keybindings"})," property on a mathfield element."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"const mf = document.getElementById('mf');\nmf.keybindings = [\n  ...mf.keybindings,  // preserve existing keybindings\n  {\n    key: 'ctrl+alt+shift+[KeyT]',\n    ifMode: 'math',\n    command: ['switchMode', 'text'],\n  },\n  {\n    key: 'ctrl+alt+shift+[KeyT]',\n    ifMode: 'text',\n    command: ['switchMode', 'math'],\n  },\n];\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If using an ",(0,i.jsx)(n.code,{children:"insert"})," command, the LaTeX fragment argument of the function can include\none of the following special placeholder tokens:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"#@"}),": replaced with the selection, if there is one. If there is no selection,\nreplaced with an implicit argument to the left of the caret. For example, for\n",(0,i.jsx)(n.code,{children:"12+34"}),", if the caret is at the end, ",(0,i.jsx)(n.code,{children:"#@"})," would be replaced with ",(0,i.jsx)(n.code,{children:"34"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"#?"}),": replaced with a ",(0,i.jsx)(n.code,{children:"\\placeholder{}"})," expression"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"international-keyboards",children:"International Keyboards"}),"\n",(0,i.jsx)(n.p,{children:"Correctly handling keyboard shortcuts while accounting for non-US\nkeyboard layout is surprisingly difficult. The mathfield element uses some heuristics that\nmay occasionally result in surprising results."}),"\n",(0,i.jsx)(n.p,{children:"This section details how keyboard events are used to determine which\nkeyboard shortcut to activate."}),"\n",(0,i.jsxs)(n.p,{children:["Let's consider the keyboard shortcut ",(0,i.jsx)("kbd",{children:"CONTROL/\u2318"}),"+",(0,i.jsx)("kbd",{children:"ALT/OPTION"}),"+",(0,i.jsx)("kbd",{children:"A"})]}),"\n",(0,i.jsxs)(n.p,{children:["When this key combination is pressed on a keyboard with a US keyboard\nlayout, the event received will have the properties ",(0,i.jsx)(n.code,{children:'code = "KeyA"'})," and  ",(0,i.jsx)(n.code,{children:'key = "\\u00e5"'}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["On a French AZERTY keyboard layout, the event received will have ",(0,i.jsx)(n.code,{children:'code = "KeyQ"'})," and  ",(0,i.jsx)(n.code,{children:'key = "\\u00e6"'}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Why is the code ",(0,i.jsx)(n.code,{children:"KeyQ"})," even though the user pressed the key labeled ",(0,i.jsx)(n.code,{children:"A"})," on their\nAZERTY keyboard? On this keyboard layout, the ",(0,i.jsx)(n.strong,{children:"Q"})," and ",(0,i.jsx)(n.strong,{children:"A"})," keys are swapped compared\nto the US layout and the ",(0,i.jsx)(n.code,{children:"code"}),' property reflects the "physical" key pressed.']}),"\n",(0,i.jsxs)(n.p,{children:['This is not unusual. While some keys retain their positions, many keys are\nswapped around or altogether unique in some layouts, particularly for\npunctuations and symbols. The code property of the event does not\nrepresent the label of the key, but indicates the physical position of the key\nas if it was on a US keyboard, in this case "the key immediately to the right of\nthe caps lock key, which is labeled ',(0,i.jsx)(n.strong,{children:"Q"})," on a US keyboard (but is labeled ",(0,i.jsx)(n.strong,{children:"A"}),' on a\nFrench keyboard)".']}),"\n",(0,i.jsxs)(n.p,{children:["What we want to know is that the user pressed a key labeled ",(0,i.jsx)("kbd",{children:"A"}),". But none of the\ninformation in the event record tells us that. The value of the key field varies\ndepending on the keyboard layout and the modifiers pressed."]}),"\n",(0,i.jsxs)(n.p,{children:["However, if we know the keyboard layout, we can use a table that maps the value\nof the key field to infer the label of the key  the user pressed, i.e. what the\nuser sees printed on the top of the key cap, regardless of its physical location\non the keyboard. Once we have the label, we can figure out that the user pressed\n",(0,i.jsx)("kbd",{children:"CONTROL/COMMAND/\u2318"})," + ",(0,i.jsx)("kbd",{children:"A"})," using the modifier fields of the event."]}),"\n",(0,i.jsx)(n.p,{children:"But how do we know what is the current keyboard layout? There is unfortunately\nno web platform API (broadly supported) to obtain that information.\nSo one approach is to indicate programmatically which keyboard\nlayout the user is using. Otherwise, the mathfield will use the user locale to\nguess the keyboard (for example, guessing to use the French AZERTY keyboard\nif the user locale is France)."}),"\n",(0,i.jsx)(n.p,{children:"Finally, the mathfield uses a heuristic to refine its guess: with each keyboard\nevent, the mathfield checks that the info in the event record (specifically the code\nand key fields) is consistent with the current keyboard layout. If not, it\nfinds a better matching keyboard layout, and will switch to that keyboard layout\nif it is confident enough of that guess."}),"\n",(0,i.jsx)(n.p,{children:'The mathfield element currently has a limited set of "known" keyboard layouts. If you happen\nto use an unknown keyboard layout, it will guess the wrong keyboard\nlayout. As a result some keyboard shortcuts may produce unexpected results.'}),"\n",(0,i.jsxs)("section",{id:"inline-shortcuts",children:[(0,i.jsx)(n.h2,{id:"inline-shortcuts",children:"Inline Shortcuts"}),(0,i.jsxs)(n.p,{children:["An ",(0,i.jsx)(n.strong,{children:"inline shortcut"})," is a sequence of keystrokes typed on the keyboard that get\nreplaced with another symbol. Unlike keybindings they cannot be used to\ntrigger a command, only to insert a LaTeX fragment."]}),(0,i.jsxs)(n.p,{children:["For example, typing the ",(0,i.jsx)("kbd",{children:"P"})," key followed by the ",(0,i.jsx)("kbd",{children:"I"})," key will\nresult in the ",(0,i.jsx)(n.code,{children:"\\pi"})," \\[ \\pi \\] LaTeX fragment being inserted, and not the ",(0,i.jsx)(n.code,{children:"pi"}),"\ncharacters."]}),(0,i.jsx)(n.p,{children:"Inline shortcuts can be typed either using a physical keyboard or the\nvirtual keyboard."}),(0,i.jsxs)(n.p,{children:["If a substitution was undesirable, use ",(0,i.jsx)(n.strong,{children:"Undo"})," (",(0,i.jsx)("kbd",{children:"Control/Command/\u2318"})," +\n",(0,i.jsx)("kbd",{children:"Z"}),") to revert to the raw input."]}),(0,i.jsxs)(n.p,{children:["To prevent two consecutive characters to be recognized as part of a shortcut\nsequence, press the ",(0,i.jsx)(n.strong,{children:"Space"})," bar between them."]}),(0,i.jsxs)(n.p,{children:["Some ",(0,i.jsx)(n.a,{href:"https://github.com/arnog/mathlive/blob/master/src/editor/shortcuts-definitions.ts",children:"built-in inline shortcuts"}),"\nare defined, but they can be replaced or enhanced with additional shortcuts."]}),(0,i.jsx)(n.p,{children:'On line 4, we\'re adding a shortcut for "infty".'}),(0,i.jsxs)(t,{"show-line-numbers":"","mark-line":"4",children:[(0,i.jsxs)(n.div,{slot:"html",children:['<math-field id="mf">\n',"    ","x=\\frac{-b\\pm \\sqrt{b^2-4ac}}{2a}\n","</math-field>\n"]}),(0,i.jsxs)(n.div,{slot:"javascript",children:["const mf = document.getElementById('mf');\n","mf.inlineShortcuts = {\n","  ","...mf.inlineShortcuts,    // Preserve default shortcuts\n","  ","\"infty\": '\\\\infty'\n","};\n"]})]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"To constraint the context in which a shortcut should apply"}),", use the ",(0,i.jsx)(n.code,{children:"after"}),"\nproperty:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'mf.inlineShortcuts = {\n  ...mf.inlineShortcuts,    // Preserve default shortcuts\n  "in": {\n      after: "space | letter | digit | symbol | fence",\n      value: "\\\\in",\n  }\n};\n'})}),(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"after"})," property indicate in what context the shortcut should apply. One or\nmore values can be specified, separated by a ",(0,i.jsx)(n.code,{children:"|"})," sign. If any of the values\nmatch, the shortcut will be applicable."]}),(0,i.jsx)(n.p,{children:"Possible values are:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"space"'})," A spacing command, such as ",(0,i.jsx)(n.code,{children:"\\quad"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"nothing"'})," The begining of a group"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"surd"'})," A square root or n-th root"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"frac"'})," A fraction"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"function"'})," A function such as ",(0,i.jsx)(n.code,{children:"\\sin"})," or ",(0,i.jsx)(n.code,{children:"f"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"letter"'})," A letter, such as ",(0,i.jsx)(n.code,{children:"x"})," or ",(0,i.jsx)(n.code,{children:"n"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"digit"'})," ",(0,i.jsx)(n.code,{children:"0"})," through ",(0,i.jsx)(n.code,{children:"9"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"binop"'})," A binary operator, such as ",(0,i.jsx)(n.code,{children:"+"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"relop"'})," A relational operator, such as ",(0,i.jsx)(n.code,{children:"="})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"punct"'})," A punctuation mark, such as ",(0,i.jsx)(n.code,{children:","})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"array"'})," An array, such as a matrix or cases statement"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"openfence"'})," An opening fence, such as ",(0,i.jsx)(n.code,{children:"("})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"closefence"'})," A closing fence such as ",(0,i.jsx)(n.code,{children:"}"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"text"'})," Some plain text"]}),"\n"]})]}),"\n",(0,i.jsx)(n.h2,{id:"multicharacter-identifiers",children:"Multicharacter Identifiers"}),"\n",(0,i.jsx)(n.p,{children:"It may not be possible to define in advance all the keystroke combinations\nthat should be interpreted as an inline shortcut."}),"\n",(0,i.jsx)(n.p,{children:"For example, it might be desirable to recognize multi-character identifiers, e.g. \\( \\mathrm{speed} = \\frac{\\mathrm{distance}}{\\mathrm{time}} \\)"}),"\n",(0,i.jsxs)(n.p,{children:["There are several ways to represent multicharacter identifiers in LaTeX.\nConventionally, the ",(0,i.jsx)(n.code,{children:"\\mathit{}"})," command is used to represent variables and the\n",(0,i.jsx)(n.code,{children:"\\mathrm{}"})," for function names. You may prefer to use ",(0,i.jsx)(n.code,{children:"\\mathrm{}"})," in both cases.\nThe command ",(0,i.jsx)(n.code,{children:"\\operatorname{}"})," may also be used for this purpose."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"To recognize multicharacter identifiers,"})," provide a ",(0,i.jsx)(n.code,{children:"onInlineShortcut()"})," handler.\nIf the handler recognize the input as a valid multichar identifiers, it\nshould return a command representing this identifiers."]}),"\n",(0,i.jsxs)(n.p,{children:["The string passed to the ",(0,i.jsx)(n.code,{children:"onInlineShortcut"})," handler is a raw sequence of\ncharacters the user typed on the physical or virtual keyboard."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"mf.onInlineShortcut = (_mf, s) => {\n  if (/^[A-Z][a-z]+$/.test(s)) return `\\\\mathrm{${s}}`;\n  if (/^[a-z][a-z]+$/.test(s)) return `\\\\mathit{${s}}`;\n  return '';\n};\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You can use the ",(0,i.jsx)(n.code,{children:"onInlineShortcut"})," handler to recognize arbitrary patterns."]}),"\n",(0,i.jsx)(n.p,{children:"For example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"mf.onInlineShortcut = (_mf, s) => {\n  if (/^[a-zA-Z][a-zA-Z0-9]*'?(_[a-zA-Z0-9]+'?)?$/.test(s)) {\n    const m = s.match(/^([a-zA-Z]+)([0-9]+)$/);\n    if (m) {\n      if (['alpha', 'beta', 'gamma'].includes(m[1]))\n        return `\\\\${m[1]}_{${m[2]}}`;\n      return `\\\\mathrm{${m[1]}}_{${m[2]}}`;\n    }\n    return `\\\\mathrm{${s}}`;\n  }\n  return '';\n};\n"})}),"\n",(0,i.jsxs)(n.p,{children:['This will recognize "alpha34" -> ',(0,i.jsx)(n.code,{children:"\\alpha_{34}"}),' or "speed" -> ',(0,i.jsx)(n.code,{children:"\\mathrm{speed}"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"customizing-the-inline-shortcut-sensitivity",children:"Customizing the Inline Shortcut Sensitivity"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"To change how quickly a set of keys must be typed to be considered a shortcut"}),"\nset the ",(0,i.jsx)(n.code,{children:"inlineShortcutTimeout"})," property."]}),"\n",(0,i.jsx)(n.p,{children:"It represents the maximum amount of time, in milliseconds, between consecutive\ncharacters for them to be considered part of the same shortcut sequence."}),"\n",(0,i.jsx)(n.p,{children:"A value of 0 is the same as infinity: any consecutive\ncharacter will be candidate for an inline shortcut, regardless of the\ninterval between this character and the previous one."}),"\n",(0,i.jsx)(n.p,{children:"A value of 750 will indicate that the maximum interval between two\ncharacters to be considered part of the same inline shortcut sequence is\n3/4 of a second."}),"\n",(0,i.jsxs)(n.p,{children:["This is useful to enter ",(0,i.jsx)(n.code,{children:"+-"})," as a sequence of two characters, while also\nsupporting the ",(0,i.jsx)(n.code,{children:"\xb1"})," shortcut with the same sequence."]}),"\n",(0,i.jsx)(n.p,{children:"The first result can be entered by pausing slightly between the first and\nsecond character if this option is set to a value of 250 or so."}),"\n",(0,i.jsx)(n.p,{children:"Note that some operations, such as clicking to change the selection, or losing\nthe focus on the mathfield, will automatically timeout the shortcuts."}),"\n",(0,i.jsxs)("section",{id:"ascii-math",children:[(0,i.jsx)(n.h2,{id:"asciimath-inline-shortcuts",children:"ASCIIMath Inline Shortcuts"}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/asciimath/asciimathml/blob/master/ASCIIMathML.js",children:"ASCIIMath"})," defines a series of shortcuts that can be typed with ASCII characters to\nrepresent mathematical symbols and expressions."]}),(0,i.jsx)(o,{path:"/mathfield/reference/keybindings/",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Learn more:"})," ASCIIMath and other default keybindings",(0,i.jsx)(s,{name:"chevron-right-bold"})]})})]})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}function u(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(6540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);