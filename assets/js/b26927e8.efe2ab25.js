"use strict";(self.webpackChunkcortexjs_io=self.webpackChunkcortexjs_io||[]).push([[8522],{2776:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>o,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"compute-engine/reference-linear-algebra","title":"Linear Algebra","description":"Linear algebra is the branch of","source":"@site/docs/compute-engine/88-reference-linear-algebra.md","sourceDirName":"compute-engine","slug":"/compute-engine/reference/linear-algebra/","permalink":"/compute-engine/reference/linear-algebra/","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1751556603000,"sidebarPosition":88,"frontMatter":{"title":"Linear Algebra","slug":"/compute-engine/reference/linear-algebra/"},"sidebar":"docSidebar","previous":{"title":"Functions","permalink":"/compute-engine/reference/functions/"},"next":{"title":"Logic","permalink":"/compute-engine/reference/logic/"}}');var t=s(4848),r=s(8453);const a={title:"Linear Algebra",slug:"/compute-engine/reference/linear-algebra/"},l=void 0,c={},d=[{value:"Representing Matrices",id:"representing-matrices",level:2},{value:"Vector",id:"vector",level:3},{value:"Matrix",id:"matrix",level:3},{value:"Matrix Properties",id:"matrix-properties",level:2},{value:"Shape",id:"shape",level:3},{value:"Rank",id:"rank",level:3},{value:"Accessing the content of Tensors",id:"accessing-the-content-of-tensors",level:2},{value:"At",id:"at",level:3},{value:"Transforming Matrixes",id:"transforming-matrixes",level:2},{value:"Flatten",id:"flatten",level:3},{value:"Reshape",id:"reshape",level:3},{value:"Transpose",id:"transpose",level:3},{value:"ConjugateTranspose",id:"conjugatetranspose",level:3},{value:"Inverse",id:"inverse",level:3},{value:"PseudoInverse",id:"pseudoinverse",level:3},{value:"Diagonal",id:"diagonal",level:3},{value:"Calculating with Matrixes",id:"calculating-with-matrixes",level:2},{value:"Determinant",id:"determinant",level:3},{value:"AdjugateMatrix",id:"adjugatematrix",level:3},{value:"Trace",id:"trace",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components},{FunctionDefinition:s,Intro:i,Latex:a,ReadMore:l,Signature:c}=n;return s||x("FunctionDefinition",!0),i||x("Intro",!0),a||x("Latex",!0),l||x("ReadMore",!0),c||x("Signature",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i,{children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Linear_algebra",children:"Linear algebra"})," is the branch of\nmathematics that studies vector spaces and linear transformations between them\nlike adding and scaling. It uses matrixes to represent linear maps.\nLinear algebra is widely used in science and engineering."]})}),"\n",(0,t.jsx)(a,{value:"\\begin{pmatrix} 1 & 3 \\\\ 5 & 0 \\end{pmatrix}"}),"\n",(0,t.jsx)(n.p,{children:"In the Compute Engine matrices are represented as lists of lists."}),"\n",(0,t.jsx)(n.p,{children:"For example the matrix above is represented as the following list of lists:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["List", ["List", 1, 3, ["List", 5, 0]]]\n'})}),"\n",(0,t.jsxs)(n.p,{children:["An ",(0,t.jsx)(n.strong,{children:"axis"})," is a dimension of a tensor. A vector has one axis, a matrix has two\naxes, a tensor (multi-dimensional matrix) has more than two axes."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"shape"})," of a tensor is the length of each of its axes. For example, a\nmatrix with 3 rows and 4 columns has a shape of ",(0,t.jsx)(n.code,{children:"(3, 4)"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"rank"})," of a tensor is the number of axes of the tensor. For example, a\nmatrix has a rank of 2. Note that rank is sometimes used with a different\nmeaning. For example, the rank of a matrix can also be defined as the maximum\nnumber of linearly independent rows or columns of the matrix. In the Compute\nEngine, ",(0,t.jsx)(n.strong,{children:"rank"})," is always used with the meaning of the number of axes."]}),"\n",(0,t.jsxs)(n.p,{children:["In the Compute Engine, matrices are stored in ",(0,t.jsx)(n.strong,{children:"row-major"})," order. This means that\nthe first element of the outer axis is the first row of the matrix, the second element\nof the list is the second row of the matrix, etc."]}),"\n",(0,t.jsxs)(l,{path:"/compute-engine/reference/collections/",children:["Since\nmatrixes are ",(0,t.jsx)(n.code,{children:"List"})," collections, some ",(0,t.jsx)(n.strong,{children:"collection operations"}),"\ncan also be applied to them such as ",(0,t.jsx)(n.code,{children:"At"}),", ",(0,t.jsx)(n.code,{children:"Reduce"})," and ",(0,t.jsx)(n.code,{children:"Map"}),". "]}),"\n",(0,t.jsxs)(n.p,{children:["An extension of linear algebra is ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Tensor_algebra",children:"tensor algebra"}),"\nwhich studies tensors, which are multidimensional arrays."]}),"\n",(0,t.jsx)(n.p,{children:"For example, a grayscale image can be represented by a matrix of grayscale\nvalues. But a color image is represented by a rank 3 tensor, an array of RGB\ntriplets. Tensors are also represented as nested lists."}),"\n",(0,t.jsx)(n.p,{children:"The Compute Engine provides a number of functions for working with matrices."}),"\n",(0,t.jsx)(n.h2,{id:"representing-matrices",children:"Representing Matrices"}),"\n",(0,t.jsxs)(n.p,{children:["Vectors (row vectors) are represented as lists, that is an expression with the\nhead ",(0,t.jsx)(n.code,{children:"List"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Matrixes are represented as lists of lists."}),"\n",(0,t.jsx)(n.p,{children:"Tensors (multi-dimensional matrixes) are represented as nested lists."}),"\n",(0,t.jsx)(n.admonition,{title:"Note",type:"info",children:(0,t.jsxs)(n.p,{children:["Tensors are represented internally using an optimized format that is more\nefficient than nested lists. Because of this, some operations on tensors\nsuch as ",(0,t.jsx)(n.code,{children:"Reshape"})," and ",(0,t.jsx)(n.code,{children:"Transpose"})," can be done in O(1) time."]})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Vector"})," is a convenience function that interprets a list of elements as a\ncolumn vector."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Matrix"}),' is an optional "tag" inert function that is used to influence the visual\nrepresentation of a matrix. It has not impact on the value of the matrix.']}),"\n",(0,t.jsxs)(n.p,{children:['In LaTeX notation, a matrix is represented with "environments" (with command\n',(0,t.jsx)(n.code,{children:"\\begin"})," and ",(0,t.jsx)(n.code,{children:"\\end"}),") such as  ",(0,t.jsx)(n.code,{children:"pmatrix"})," or ",(0,t.jsx)(n.code,{children:"bmatrix"}),".:"]}),"\n",(0,t.jsx)(a,{value:"\\begin{pmatrix} 1 & 3 \\\\ 5 & 0 \\end{pmatrix}"}),"\n",(0,t.jsx)(a,{value:"\\begin{bmatrix} 1 & 3 \\\\ 5 & 0 \\end{bmatrix}"}),"\n",(0,t.jsxs)(n.p,{children:["In LaTeX, each column is separated by an ",(0,t.jsx)(n.code,{children:"&"})," and each row is separated by\n",(0,t.jsx)(n.code,{children:"\\"}),"."]}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"vector",children:"Vector"})}),"\n",(0,t.jsxs)(s,{name:"Vector",children:[(0,t.jsxs)(c,{name:"Vector",children:[(0,t.jsx)(n.em,{children:"x-1"}),", ...",(0,t.jsx)(n.em,{children:"x-2"})]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Vector"})," interprets the elements ",(0,t.jsx)(n.em,{children:"x-1"}),"... as a column vector"]}),(0,t.jsxs)(n.p,{children:["This is essentially a shortcut for ",(0,t.jsx)(n.code,{children:'["Matrix", ["List", ["List", _x-1_], ["List, _x-2_], ...]]]'}),"."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Vector", 1, 3, 5, 0]\n'})}),(0,t.jsx)(a,{value:"\\begin{pmatrix} 1 \\\\ 3 \\\\ 5 \\\\ 0 \\end{pmatrix}"}),(0,t.jsx)(n.p,{children:"A row vector can be represented with a simple list or a tuple."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["List", 1, 3, 5, 0]\n'})}),(0,t.jsx)(a,{value:"\\begin{bmatrix} 1 & 3 & 5 & 0 \\end{bmatrix}"})]}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"matrix",children:"Matrix"})}),"\n",(0,t.jsxs)(s,{name:"Matrix",children:[(0,t.jsx)(c,{name:"Matrix",children:(0,t.jsx)(n.em,{children:"matrix"})}),(0,t.jsxs)(c,{name:"Matrix",children:[(0,t.jsx)(n.em,{children:"matrix"}),", ",(0,t.jsx)(n.em,{children:"delimiters"}),", ",(0,t.jsx)(n.em,{children:"columns-format"})]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Matrix"})," is an inert function: its value is the value of its first argument.\nIt influences the visual representation of a matrix."]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"matrix"})," is a matrix represented by a list of rows. Each row is represented\nby a list of elements."]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"delimiters"})," is an optional string of two characters.\nThe first character represent the opening delimiter and the second character\nrepresents the closing delimiter."]}),(0,t.jsx)(n.p,{children:"The delimiters can be any of the following characters:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"("}),", ",(0,t.jsx)(n.code,{children:")"}),", ",(0,t.jsx)(n.code,{children:"["}),", ",(0,t.jsx)(n.code,{children:"]"}),", ",(0,t.jsx)(n.code,{children:"{"}),", ",(0,t.jsx)(n.code,{children:"}"}),", ",(0,t.jsx)(n.code,{children:"<"}),", ",(0,t.jsx)(n.code,{children:">"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"\u27e6"})," (",(0,t.jsx)(n.code,{children:"U+27E6"}),"), ",(0,t.jsx)(n.code,{children:"\u27e7"})," (",(0,t.jsx)(n.code,{children:"U+27E7"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"|"}),", ",(0,t.jsx)(n.code,{children:"\u2016"})," (",(0,t.jsx)(n.code,{children:"U+2016"}),")"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"\\"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"\u2308"})," (",(0,t.jsx)(n.code,{children:"U+2308"}),"), ",(0,t.jsx)(n.code,{children:"\u2309"})," (",(0,t.jsx)(n.code,{children:"U+2309"}),"), ",(0,t.jsx)(n.code,{children:"\u230a"})," (",(0,t.jsx)(n.code,{children:"U+230A"}),"), ",(0,t.jsx)(n.code,{children:"\u230b"})," (",(0,t.jsx)(n.code,{children:"U+230B"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"\u231c"})," (",(0,t.jsx)(n.code,{children:"U+231C"}),"), ",(0,t.jsx)(n.code,{children:"\u231d"})," (",(0,t.jsx)(n.code,{children:"U+231D"}),"), ",(0,t.jsx)(n.code,{children:"\u231e"})," (",(0,t.jsx)(n.code,{children:"U+231E"}),"), ",(0,t.jsx)(n.code,{children:"\u231f"})," (",(0,t.jsx)(n.code,{children:"U+231F"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"\u23b0"})," (",(0,t.jsx)(n.code,{children:"U+23B0"}),"), ",(0,t.jsx)(n.code,{children:"\u23b1"})," (",(0,t.jsx)(n.code,{children:"U+23B1"}),")."]}),"\n"]}),(0,t.jsxs)(n.p,{children:["In addition, the character ",(0,t.jsx)(n.code,{children:"."})," can be used to indicate no delimiter."]}),(0,t.jsx)(n.p,{children:"Some commom combinations may be represented using some\nstandard LaTeX environments:"}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Delimiters"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"LaTeX Environment"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Example"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"()"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"pmatrix"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{className:"language-math math-inline",children:"\\begin{pmatrix} a & b \\\\ c & d \\end{pmatrix}"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"[]"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"bmatrix"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{className:"language-math math-inline",children:"\\begin{bmatrix} a & b \\\\ c & d \\end{bmatrix}"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"{}"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"Bmatrix"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{className:"language-math math-inline",children:"\\begin{Bmatrix} a & b \\\\ c & d \\end{Bmatrix}"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"`"}),(0,t.jsx)(n.td,{style:{textAlign:"left"}}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"`"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"\u2016\u2016"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"Vmatrix"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{className:"language-math math-inline",children:"\\begin{Vmatrix} a & b \\\\ c & d \\end{Vmatrix}"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"{."})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"dcases"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{className:"language-math math-inline",children:"\\begin{dcases} a & b \\\\ c & d \\end{dcases}"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:".}"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"rcases"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{className:"language-math math-inline",children:"\\begin{rcases} a & b \\\\ c & d \\end{rcases}"})})]})]})]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"columns_format"})," is an optional string indicating the format of each column.\nA character ",(0,t.jsx)(n.code,{children:"="})," indicates a centered column, ",(0,t.jsx)(n.code,{children:"<"})," indicates a left-aligned\ncolumn, and ",(0,t.jsx)(n.code,{children:">"})," indicates a right-aligned column."]}),(0,t.jsxs)(n.p,{children:["A character of ",(0,t.jsx)(n.code,{children:"|"})," indicate a solid line between two\ncolumns and ",(0,t.jsx)(n.code,{children:":"})," indicate a dashed lines between two columns."]})]}),"\n",(0,t.jsx)(n.h2,{id:"matrix-properties",children:"Matrix Properties"}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"shape",children:"Shape"})}),"\n",(0,t.jsxs)(s,{name:"Shape",children:[(0,t.jsx)(c,{name:"Shape",children:(0,t.jsx)(n.em,{children:"matrix"})}),(0,t.jsx)(n.p,{children:"Returns the shape of a matrix, a tuple of the lengths of the\nmatrix along each of its axis."}),(0,t.jsx)(n.p,{children:"A list (or vector) has a single axis. A matrix has two axes. A tensor has more\nthan two axes."}),(0,t.jsxs)(n.p,{children:["For a scalar, ",(0,t.jsx)(n.code,{children:"Shape"})," returns an empty tuple."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Shape", 5]\n// \u2794 ["Tuple"]\n\n["Shape", ["List", 5, 2, 10, 18]]\n// \u2794 ["Tuple", 4]\n\n["Shape", ["List", ["List", 5, 2, 10, 18], ["List", 1, 2, 3]]]\n// \u2794 ["Tuple", 2, 4]\n'})}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"}),' The shape of a matrix is also sometimes called "dimensions".\nHowever, this terminology is ambiguous because the word "dimension" is also\nused to refer to the length of a matrix along a specific axis.']})]}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"rank",children:"Rank"})}),"\n",(0,t.jsxs)(s,{name:"Rank",children:[(0,t.jsx)(c,{name:"Rank",children:(0,t.jsx)(n.em,{children:"matrix"})}),(0,t.jsx)(n.p,{children:"Returns the number of axes of a matrix."}),(0,t.jsxs)(n.p,{children:["A scalar (a number, for example) has ",(0,t.jsx)(n.strong,{children:"rank 0"}),"."]}),(0,t.jsxs)(n.p,{children:["A vector or list has ",(0,t.jsx)(n.strong,{children:"rank 1"}),"."]}),(0,t.jsxs)(n.p,{children:["A matrix has ",(0,t.jsx)(n.strong,{children:"rank 2"}),", a tensor has ",(0,t.jsx)(n.strong,{children:"rank 3"}),", etc."]}),(0,t.jsx)(n.p,{children:"The rank is the length of the shape of the tensor."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Rank", 5]\n// \u2794 0\n\n["Rank", ["List", 5, 2, 10, 18]]\n// \u2794 1\n\n["Rank", ["List", ["List", 5, 2, 10], ["List", 1, 2, 3]]]\n// \u2794 2\n'})})]}),"\n",(0,t.jsx)(n.h2,{id:"accessing-the-content-of-tensors",children:"Accessing the content of Tensors"}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"at",children:"At"})}),"\n",(0,t.jsxs)(s,{name:"At",children:[(0,t.jsxs)(c,{name:"At",children:[(0,t.jsx)(n.em,{children:"matrix"}),", ",(0,t.jsx)(n.em,{children:"index-1"}),", ",(0,t.jsx)(n.em,{children:"index-2"}),", ..."]}),(0,t.jsx)(n.p,{children:"Returns the element of the matrix at the specified indexes."}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"index-1"}),", ... is a sequence of integers, one for each axis of the matrix."]}),(0,t.jsxs)(n.p,{children:["Indexes start at 1. Negative indexes count elements from the end. A negative\nindex is equivalent to adding the length of the axis to the index. So ",(0,t.jsx)(n.code,{children:"-1"})," is\nthe last element of the axis, ",(0,t.jsx)(n.code,{children:"-2"})," is the second to last element, etc."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["At", ["List", 5, 2, 10, 18], 3]\n// \u2794 10\n\n["At", ["List", ["List", 5, 2, 10, 18], ["List", 1, 2, 3]], 2, 3]\n// \u2794 3\n\n["At", ["List", ["List", 5, 2, 10, 18], ["List", 1, 2, 3]], 2, -1]\n// \u2794 3\n'})}),(0,t.jsx)(n.p,{children:"In a list (or vector), there is only one axis, so there is only one index."}),(0,t.jsx)(n.p,{children:"In a matrix, the first index is the row, the second is the column."}),(0,t.jsx)(n.p,{children:"In LaTeX, accessing the element of a matrix is done with a subscript or\nsquare brackets following a matrix."}),(0,t.jsx)(a,{value:"\\mathbf{A}_{2,3}"}),(0,t.jsx)(a,{value:"\\mathbf{A}\\lbrack2,3\\rbrack"})]}),"\n",(0,t.jsx)(n.h2,{id:"transforming-matrixes",children:"Transforming Matrixes"}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"flatten",children:"Flatten"})}),"\n",(0,t.jsxs)(s,{name:"Flatten",children:[(0,t.jsx)(c,{name:"Flatten",children:(0,t.jsx)(n.em,{children:"matrix"})}),(0,t.jsx)(n.p,{children:"Returns a list of all the elements of the matrix, recursively, in row-major\norder."}),(0,t.jsx)(n.p,{children:"This function can also be applied to any collection."}),(0,t.jsxs)(n.p,{children:["Only elements with the same head as the collection are flattened.\nMatrixes have a head of ",(0,t.jsx)(n.code,{children:"List"}),", so only other ",(0,t.jsx)(n.code,{children:"List"})," elements\nare flattened."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Flatten", ["List", ["List", 5, 2, 10, 18], ["List", 1, 2, 3]]]\n// \u2794 ["List", 5, 2, 10, 18, 1, 2, 3]\n'})}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Flatten"})," is similar to the APL ",(0,t.jsx)(n.code,{children:","})," Ravel operator or ",(0,t.jsx)(n.code,{children:"numpy.ravel"}),"\n",(0,t.jsx)(n.a,{href:"https://numpy.org/doc/stable/reference/generated/numpy.ravel.html",children:"Numpy"}),"."]})]}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"reshape",children:"Reshape"})}),"\n",(0,t.jsxs)(s,{name:"Reshape",children:[(0,t.jsxs)(c,{name:"Reshape",children:[(0,t.jsx)(n.em,{children:"matrix"}),", ",(0,t.jsx)(n.em,{children:"shape"})]}),(0,t.jsx)(n.p,{children:"Returns a matrix with the specified shape."}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"matrix"})," can be a list, a matrix, a tensor or a collection."]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"shape"})," is a tuple of integers, one for each axis of the result matrix."]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Reshape"})," can be used to convert a list or collection into a matrix."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Reshape", ["Range", 9], ["Tuple", 3, 3]]\n// \u2794 ["List", ["List", 1, 2, 3], ["List", 4, 5, 6], ["List", 7, 8, 9]]\n'})}),(0,t.jsxs)(n.p,{children:["This is similar to the APL ",(0,t.jsx)(n.code,{children:"\u2374"})," Reshape operator or ",(0,t.jsx)(n.code,{children:"numpy.reshape"}),"\n",(0,t.jsx)(n.a,{href:"https://numpy.org/doc/stable/reference/generated/numpy.reshape.html",children:"Numpy"}),"."]}),(0,t.jsx)(n.p,{children:"The result may have fewer or more elements than the original tensor."}),(0,t.jsxs)(n.p,{children:["When reshaping, the elements are taken from the original tensor in row-major\norder, that is the order of elements as returned by ",(0,t.jsx)(n.code,{children:"Flatten"}),"."]}),(0,t.jsx)(n.p,{children:"If the result has fewer elements, the elements are dropped from the end of the\nelement list. If the result has more elements, the lists of elements\nis filled cyclically."}),(0,t.jsxs)(n.p,{children:["This is the same behavior as APL, but other environment may behave differently.\nFor example, by default Mathematica ",(0,t.jsx)(n.code,{children:"ArrayReshape"})," will fill the missing elements\nwith zeros."]})]}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"transpose",children:"Transpose"})}),"\n",(0,t.jsxs)(s,{name:"Transpose",children:[(0,t.jsx)(c,{name:"Transpose",children:(0,t.jsx)(n.em,{children:"matrix"})}),(0,t.jsx)(n.p,{children:"Returns the transpose of the matrix."}),(0,t.jsx)(a,{value:"\\mathbf{A}^T"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Transpose", ["List", ["List", 1, 2, 3], ["List", 4, 5, 6]]]\n// \u2794 ["List", ["List", 1, 4], ["List", 2, 5], ["List", 3, 6]]\n'})}),(0,t.jsxs)(c,{name:"Transpose",children:[(0,t.jsx)(n.em,{children:"tensor"}),", ",(0,t.jsx)(n.em,{children:"axis-1"}),", ",(0,t.jsx)(n.em,{children:"axis-2"})]}),(0,t.jsx)(n.p,{children:"Swap the two specified axes of the tensor. Note that axis\nindexes start at 1."})]}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"conjugatetranspose",children:"ConjugateTranspose"})}),"\n",(0,t.jsxs)(s,{name:"ConjugateTranspose",children:[(0,t.jsx)(c,{name:"ConjugateTranspose",children:(0,t.jsx)(n.em,{children:"matrix"})}),(0,t.jsx)(a,{value:"A^\\star"}),(0,t.jsxs)(n.p,{children:["Returns the ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Conjugate_transpose",children:"conjugate transpose"})," of the matrix, that is\nthe transpose of the matrix with all its (complex) elements conjugated.\nAlso known as the Hermitian transpose."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["ConjugateTranspose", ["List", ["List", 1, 2, 3], ["List", 4, 5, 6]]]\n// \u2794 ["List", ["List", 1, 4], ["List", 2, 5], ["List", 3, 6]]\n'})}),(0,t.jsxs)(c,{name:"ConjugateTranspose",children:[(0,t.jsx)(n.em,{children:"matrix"}),", ",(0,t.jsx)(n.em,{children:"axis-1"}),", ",(0,t.jsx)(n.em,{children:"axis-2"})]}),(0,t.jsxs)(n.p,{children:["Swap the two specified axes of the ",(0,t.jsx)(n.em,{children:"matrix"}),". Note that axis\nindexes start at 1. In addition, all the (complex) elements\nof the tensor are conjugated."]})]}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"inverse",children:"Inverse"})}),"\n",(0,t.jsxs)(s,{name:"Inverse",children:[(0,t.jsx)(c,{name:"Inverse",children:(0,t.jsx)(n.em,{children:"matrix"})}),(0,t.jsx)(n.p,{children:"Returns the inverse of the matrix."}),(0,t.jsx)(a,{value:"\\mathbf{A}^{-1}"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Inverse", ["List", ["List", 1, 2], ["List", 3, 4]]]\n// \u2794 ["List", ["List", -2, 1], ["List", 1.5, -0.5]]\n'})})]}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"pseudoinverse",children:"PseudoInverse"})}),"\n",(0,t.jsxs)(s,{name:"PseudoInverse",children:[(0,t.jsx)(c,{name:"PseudoInverse",children:(0,t.jsx)(n.em,{children:"matrix"})}),(0,t.jsx)(a,{value:"\\mathbf{A}^+"}),(0,t.jsxs)(n.p,{children:["Returns the ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Moore%E2%80%93Penrose_inverse",children:"Moore-Penrose pseudoinverse"})," of the matrix."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["PseudoInverse", ["List", ["List", 1, 2], ["List", 3, 4]]]\n// \u2794 ["List", ["List", -2, 1], ["List", 1.5, -0.5]]\n'})})]}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"diagonal",children:"Diagonal"})}),"\n",(0,t.jsxs)(s,{name:"Diagonal",children:[(0,t.jsx)(c,{name:"Diagonal",children:(0,t.jsx)(n.em,{children:"matrix"})}),(0,t.jsx)(n.p,{children:"Returns the diagonal of the matrix, that is the list of all the elements\non the diagonal of the matrix."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Diagonal", ["List", ["List", 1, 2], ["List", 3, 4]]]\n// \u2794 ["List", 1, 4]\n'})})]}),"\n",(0,t.jsx)(n.h2,{id:"calculating-with-matrixes",children:"Calculating with Matrixes"}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"determinant",children:"Determinant"})}),"\n",(0,t.jsxs)(s,{name:"Determinant",children:[(0,t.jsx)(c,{name:"Determinant",children:(0,t.jsx)(n.em,{children:"matrix"})}),(0,t.jsx)(n.p,{children:"Returns the determinant of the matrix."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Determinant", ["List", ["List", 1, 2], ["List", 3, 4]]]\n// \u2794 -2\n'})})]}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"adjugatematrix",children:"AdjugateMatrix"})}),"\n",(0,t.jsxs)(s,{name:"AdjugateMatrix",children:[(0,t.jsx)(c,{name:"AdjugateMatrix",children:(0,t.jsx)(n.em,{children:"matrix"})}),(0,t.jsx)(a,{value:"\\operatorname{adj}(\\mathbf{A})"}),(0,t.jsxs)(n.p,{children:["Returns the ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Adjugate_matrix",children:"adjugate matrix"})," of\nthe input matrix, that is the inverse of the cofactor matrix."]}),(0,t.jsxs)(n.p,{children:["The cofactor matrix is a matrix of the determinants of the minors of the matrix\nmultiplied by ",(0,t.jsx)(n.code,{className:"language-math math-inline",children:"(-1)^{i+j}"}),". That is, for each element of the matrix,\nthe cofactor is the determinant of the matrix without the row and column of\nthe element."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["AdjugateMatrix", ["List", ["List", 1, 2], ["List", 3, 4]]]\n// \u2794 ["List", ["List", 4, -2], ["List", -3, 1]]\n'})})]}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"trace",children:"Trace"})}),"\n",(0,t.jsxs)(s,{name:"Trace",children:[(0,t.jsx)(c,{name:"Trace",children:(0,t.jsx)(n.em,{children:"matrix"})}),(0,t.jsx)(a,{value:"\\operatorname{tr}(\\mathbf{A})"}),(0,t.jsxs)(n.p,{children:["Returns the ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Trace_(linear_algebra)",children:"trace"})," of\nthe matrix, the sum of the elements on the diagonal of the matrix. The trace\nis only defined for square matrices. The trace is also the sum of the\neigenvalues of the matrix."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Trace", ["List", ["List", 1, 2], ["List", 3, 4]]]\n// \u2794 5\n'})})]})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}function x(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var i=s(6540);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);