"use strict";(self.webpackChunkcortexjs_io=self.webpackChunkcortexjs_io||[]).push([[2180],{2307:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>a,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"compute-engine/reference-styling","title":"Styling","description":"The functions in this section produce a visual difference that is not","source":"@site/docs/compute-engine/93-reference-styling.md","sourceDirName":"compute-engine","slug":"/compute-engine/reference/styling/","permalink":"/compute-engine/reference/styling/","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1731785970000,"sidebarPosition":93,"frontMatter":{"title":"Styling","slug":"/compute-engine/reference/styling/"},"sidebar":"docSidebar","previous":{"title":"Statistics","permalink":"/compute-engine/reference/statistics/"},"next":{"title":"Trigonometry","permalink":"/compute-engine/reference/trigonometry/"}}');var r=i(4848),c=i(8453);const t={title:"Styling",slug:"/compute-engine/reference/styling/"},l=void 0,o={},d=[];function h(e){const n={code:"code",em:"em",li:"li",p:"p",strong:"strong",ul:"ul",...(0,c.R)(),...e.components},{FunctionDefinition:i,ReadMore:s,Signature:t}=n;return i||x("FunctionDefinition",!0),s||x("ReadMore",!0),t||x("Signature",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"The functions in this section produce a visual difference that is not\nmaterial to the interpretation of an expression such as text color and size or\nother typographic variations."}),"\n",(0,r.jsxs)(n.p,{children:["They are ",(0,r.jsx)(n.strong,{children:"inert"})," and the value of a ",(0,r.jsx)(n.code,{children:'["Function", _expr_]'})," expression is ",(0,r.jsx)(n.code,{children:"expr"}),"."]}),"\n",(0,r.jsxs)(i,{name:"Delimiter",children:[(0,r.jsx)(t,{name:"Delimiter",children:(0,r.jsx)(n.em,{children:"expr"})}),(0,r.jsxs)(t,{name:"Delimiter",children:[(0,r.jsx)(n.em,{children:"expr"}),", ",(0,r.jsx)(n.em,{children:"delim"})]}),(0,r.jsx)(n.p,{children:"Visually group expressions with an open delimiter, a close delimiter\nand separators between elements of the expression."}),(0,r.jsxs)(n.p,{children:["When serializing to LaTeX, render ",(0,r.jsx)(n.em,{children:"expr"})," wrapped in delimiters."]}),(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"Delimiter"})," function is ",(0,r.jsx)(n.strong,{children:"inert"})," and the value of a ",(0,r.jsx)(n.code,{children:'["Delimiter", _expr_]'})," expression is ",(0,r.jsx)(n.code,{children:"expr"}),"."]}),(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"expr"})," is a function expression, usually a ",(0,r.jsx)(n.code,{children:'["Sequence"]'}),". It should\nnot be a symbol or a number."]}),(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"delim"})," is an optional string:"]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"when it is a single character it is a separator"}),"\n",(0,r.jsx)(n.li,{children:"when it is two characters, the first is the opening delimiter and the second is the closing delimiter"}),"\n",(0,r.jsx)(n.li,{children:"when it is three characters, the first is the opening delimiter, the second is the separator, and the third is the closing delimiter"}),"\n"]}),(0,r.jsx)(n.p,{children:"The delimiters are rendered to LaTeX."}),(0,r.jsxs)(n.p,{children:["The open and close delimiters are a single character, one of: ",(0,r.jsx)(n.code,{children:'()[]{}<>|\u2016\u2308\u2309\u230a\u230b\u231c\u231d\u231e\u231f\u23b0\u23b1"'}),". The open and close delimiters do not have to match.\nFor example, ",(0,r.jsx)(n.code,{children:"\"')]'\""})," is a valid delimiter."]}),(0,r.jsxs)(n.p,{children:["If an open or close delimiter is ",(0,r.jsx)(n.code,{children:"."}),", it is ignored."]}),(0,r.jsxs)(n.p,{children:["The separator delimiter is also a single character, one of ",(0,r.jsx)(n.code,{children:",;.&:|-"})," or ",(0,r.jsx)(n.code,{children:"U+00B7"})," (middle dot), ",(0,r.jsx)(n.code,{children:"U+2022"})," (bullet) or ",(0,r.jsx)(n.code,{children:"U+2026"})," (ellipsis)."]}),(0,r.jsxs)(n.p,{children:["If no ",(0,r.jsx)(n.em,{children:"delim"})," is provided, a default delimiter is used based on\nthe type of ",(0,r.jsx)(n.em,{children:"expr"}),":"]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'["Sequence"]'})," -> ",(0,r.jsx)(n.code,{children:"(,)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'["Tuple"]'}),", ",(0,r.jsx)(n.code,{children:'["Single"]'}),", ",(0,r.jsx)(n.code,{children:'["Pair"]'}),", ",(0,r.jsx)(n.code,{children:'["Triple"]'})," -> ",(0,r.jsx)(n.code,{children:"(,)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'["List"]'})," -> ",(0,r.jsx)(n.code,{children:"[,]"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'["Set"]'})," -> ",(0,r.jsx)(n.code,{children:"{,}"})]}),"\n"]})]}),"\n",(0,r.jsxs)(i,{name:"Spacing",children:[(0,r.jsx)(t,{name:"Spacing",children:(0,r.jsx)(n.em,{children:"width"})}),(0,r.jsxs)(n.p,{children:["When serializing to LaTeX,  ",(0,r.jsx)(n.code,{children:"width"}),"is the dimension of the spacing, in 1/18 em."]}),(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"Spacing"})," function is ",(0,r.jsx)(n.strong,{children:"inert"})," and the value of a ",(0,r.jsx)(n.code,{children:'["Spacing", _expr_]'})," expression is ",(0,r.jsx)(n.code,{children:"expr"}),"."]})]}),"\n",(0,r.jsxs)(i,{name:"Style",children:[(0,r.jsxs)(t,{name:"Style",children:[(0,r.jsx)(n.em,{children:"expr"}),", ",(0,r.jsx)(n.em,{children:"dictionary"})]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"expr"}),"an expression"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dictionary"}),"a dictionary with one or more of the following keys:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'_"display"_'}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'"inline"'})," for ",(0,r.jsx)(n.code,{children:"\\textstyle"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'"block"'})," for ",(0,r.jsx)(n.code,{children:"\\displaystyle"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'"script"'})," for ",(0,r.jsx)(n.code,{children:"\\scriptstyle"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'"scriptscript"'})," for ",(0,r.jsx)(n.code,{children:"\\scriptscriptstyle"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'_"size"_'}),": ",(0,r.jsx)(n.code,{children:"1"}),"...",(0,r.jsx)(n.code,{children:"10"}),". Size ",(0,r.jsx)(n.code,{children:"5"})," is normal, size ",(0,r.jsx)(n.code,{children:"1"})," is smallest"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:'_"color"_'})}),"\n"]}),"\n"]}),"\n"]}),(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"Style"})," function is ",(0,r.jsx)(n.strong,{children:"inert"})," and the value of a ",(0,r.jsx)(n.code,{children:'["Style", _expr_]'})," expression is ",(0,r.jsx)(n.code,{children:"expr"}),"."]})]}),"\n",(0,r.jsx)(s,{path:"/compute-engine/reference/linear-algebra/#formatting",children:(0,r.jsxs)(n.p,{children:["Read more about formatting of ",(0,r.jsx)(n.strong,{children:"matrixes"})," and ",(0,r.jsx)(n.strong,{children:"vectors"})]})})]})}function a(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}function x(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var s=i(6540);const r={},c=s.createContext(r);function t(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);