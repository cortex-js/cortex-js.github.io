"use strict";(self.webpackChunkcortexjs_io=self.webpackChunkcortexjs_io||[]).push([[9048],{4057:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"compute-engine/reference-strings","title":"Strings","description":"A string is a sequence of characters such as \\"Hello, \ud83c\udf0d!\\" or \\"Simplify(\ud83d\udc68\u200d\ud83d\ude80 + \u26a1\ufe0f) \u2192 \ud83d\udc68\u200d\ud83c\udfa4\\".","source":"@site/docs/compute-engine/97-reference-strings.md","sourceDirName":"compute-engine","slug":"/compute-engine/reference/strings/","permalink":"/compute-engine/reference/strings/","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1751583237000,"sidebarPosition":97,"frontMatter":{"title":"Strings","slug":"/compute-engine/reference/strings/"},"sidebar":"docSidebar","previous":{"title":"Number Theory","permalink":"/compute-engine/reference/number-theory/"},"next":{"title":"Styling","permalink":"/compute-engine/reference/styling/"}}');var t=s(4848),i=s(8453);const l={title:"Strings",slug:"/compute-engine/reference/strings/"},c=void 0,a={},d=[{value:"String",id:"string",level:3},{value:"StringFrom",id:"stringfrom",level:3},{value:"Utf8",id:"utf8",level:3},{value:"Utf16",id:"utf16",level:3},{value:"UnicodeScalars",id:"unicodescalars",level:3},{value:"GraphemeClusters",id:"graphemeclusters",level:3},{value:"BaseForm",id:"baseform",level:3}];function o(e){const n={a:"a",code:"code",em:"em",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{FunctionDefinition:s,Signature:r}=n;return s||x("FunctionDefinition",!0),r||x("Signature",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["A string is a sequence of characters such as ",(0,t.jsx)("span",{style:{fontSize:"1.2rem"},children:(0,t.jsx)(n.code,{children:'"Hello, \ud83c\udf0d!"'})})," or ",(0,t.jsxs)("span",{style:{fontSize:"1.2rem"},children:[(0,t.jsx)(n.code,{children:'"Simplify(\ud83d\udc68\u200d\ud83d\ude80 + \u26a1\ufe0f) \u2192 \ud83d\udc68\u200d\ud83c\udfa4"'}),"."]})]}),"\n",(0,t.jsx)(n.p,{children:"In the Compute Engine, strings are composed of encoding-independent Unicode\ncharacters and provide access to those characters through a variety of Unicode\nrepresentations."}),"\n",(0,t.jsxs)(n.p,{children:["In the Compute Engine, strings are ",(0,t.jsx)(n.strong,{children:"not treated as collections"}),'. This is\nbecause the concept of a "character" is inherently ambiguous: a single\nuser-perceived character (a ',(0,t.jsx)(n.strong,{children:"grapheme cluster"}),") may consist of multiple\nUnicode scalars, and those scalars may in turn be represented differently\nin various encodings. To avoid confusion and ensure consistent behavior,\nstrings must be explicitly converted to a sequence of ",(0,t.jsx)(n.strong,{children:"grapheme clusters"})," or\n",(0,t.jsx)(n.strong,{children:"Unicode scalars"})," when individual elements need to be accessed."]}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"string",children:"String"})}),"\n",(0,t.jsxs)(s,{name:"String",children:[(0,t.jsx)(r,{name:"String",returns:"string",children:"any*"}),(0,t.jsx)(n.p,{children:"A string created by joining its arguments. The arguments are converted to their default string representation."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["String", "Hello", ", ", "\ud83c\udf0d", "!"]\n// \u2794 "Hello, \ud83c\udf0d!" \n\n["String", 42, " is the answer"]\n// \u2794 "42 is the answer"  \n\n'})})]}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"stringfrom",children:"StringFrom"})}),"\n",(0,t.jsxs)(s,{name:"StringFrom",children:[(0,t.jsxs)(r,{name:"StringFrom",returns:"string",children:["any, ",(0,t.jsx)(n.em,{children:"format"}),":string","?"]}),(0,t.jsxs)(n.p,{children:["Convert the argument to a string, using the specified ",(0,t.jsx)(n.em,{children:"format"}),"."]}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:(0,t.jsx)(n.em,{children:"format"})}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"utf-8"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"The argument is a list of UTF-8 code points"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"utf-16"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"The argument is a list of UTF-16 code points"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"unicode-scalars"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"The argument is a list of Unicode scalars (same as UTF-32)"})]})]})]}),(0,t.jsx)(n.p,{children:"For example:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["StringFrom", [240, 159, 148, 159], "utf-8"]\n// \u2794 "Hello"\n\n["StringFrom", [55357, 56607], "utf-16"]\n// \u2794 "\\u0048\\u0065\\u006c\\u006c\\u006f"\n\n["StringFrom", [128287], "unicode-scalars"]\n// \u2794 "\ud83d\udd1f"\n\n["StringFrom", [127467, 127479], "unicode-scalars"]\n// \u2794 "\ud83c\uddeb\ud83c\uddf7"\n\n'})})]}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"utf8",children:"Utf8"})}),"\n",(0,t.jsxs)(s,{name:"Utf8",children:[(0,t.jsx)(r,{name:"Utf8",returns:"list<integer>",children:"string"}),(0,t.jsxs)(n.p,{children:["Return a list of UTF-8 code points for the given ",(0,t.jsx)(n.em,{children:"string"}),"."]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," The values returned are UTF-8 bytes, not Unicode scalar values."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Utf8", "Hello"]\n// \u2794 [72, 101, 108, 108, 111]  \n\n["Utf8", "\ud83d\udc69\u200d\ud83c\udf93"]\n// \u2794 [240, 159, 145, 169, 226, 128, 141, 240, 159, 142, 147]\n'})})]}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"utf16",children:"Utf16"})}),"\n",(0,t.jsxs)(s,{name:"Utf16",children:[(0,t.jsx)(r,{name:"Utf16",returns:"list<integer>",children:"string"}),(0,t.jsxs)(n.p,{children:["Return a list of utf-16 code points for the given ",(0,t.jsx)(n.em,{children:"string"}),"."]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," The values returned are UTF-16 code units, not Unicode scalar values."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Utf16", "Hello"]\n// \u2794 [72, 101, 108, 108, 111]  \n\n["Utf16", "\ud83d\udc69\u200d\ud83c\udf93"]\n// \u2794 [55357, 56489, 8205, 55356, 57235]\n'})})]}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"unicodescalars",children:"UnicodeScalars"})}),"\n",(0,t.jsxs)(s,{name:"UnicodeScalars",children:[(0,t.jsx)(r,{name:"UnicodeScalars",returns:"list<integer>",children:"string"}),(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.strong,{children:"Unicode scalar"})," is any valid Unicode code point, represented as a number\nbetween ",(0,t.jsx)(n.code,{children:"U+0000"})," and ",(0,t.jsx)(n.code,{children:"U+10FFFF"}),", excluding the surrogate range\n(",(0,t.jsx)(n.code,{children:"U+D800"})," to ",(0,t.jsx)(n.code,{children:"U+DFFF"}),"). In other words, Unicode scalars correspond exactly to UTF-32 code units."]}),(0,t.jsxs)(n.p,{children:["This function returns the sequence of Unicode scalars (code points) that make\nup the string. Note that some characters perceived as a single visual unit\n(grapheme clusters) may consist of multiple scalars. For example, the emoji\n",(0,t.jsx)("span",{style:{fontSize:"1.2em"},children:"\ud83d\udc69\u200d\ud83d\ude80"})," is a single grapheme but is composed of several scalars."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["UnicodeScalars", "Hello"]\n// \u2794 [72, 101, 108, 108, 111]  \n\n["UnicodeScalars", "\ud83d\udc69\u200d\ud83c\udf93"]\n// \u2794 [128105, 8205, 127891]\n'})})]}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"graphemeclusters",children:"GraphemeClusters"})}),"\n",(0,t.jsxs)(s,{name:"GraphemeClusters",children:[(0,t.jsx)(r,{name:"GraphemeClusters",returns:"list<string>",children:"string"}),(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.strong,{children:"grapheme cluster"})," is the smallest unit of text that a reader perceives\nas a single character. It may consist of one or more ",(0,t.jsx)(n.strong,{children:"Unicode scalars"}),"\n(code points)."]}),(0,t.jsxs)(n.p,{children:["For example, the character ",(0,t.jsx)(n.strong,{children:"\xe9"})," can be a single scalar (",(0,t.jsx)(n.code,{children:"U+00E9"}),") or a\nsequence of scalars (",(0,t.jsx)(n.strong,{children:"e"})," ",(0,t.jsx)(n.code,{children:"U+0065"})," + ",(0,t.jsx)(n.strong,{children:"combining acute"})," ",(0,t.jsx)(n.code,{children:"U+0301"}),"),\nbut both form a single grapheme cluster."]}),(0,t.jsxs)(n.p,{children:["Here, ",(0,t.jsx)(n.strong,{children:"NFC"})," (Normalization Form C) refers to the precomposed form of characters, while ",(0,t.jsx)(n.strong,{children:"NFD"})," (Normalization Form D) refers to the decomposed form where combining marks are used."]}),(0,t.jsxs)(n.p,{children:["Similarly, complex emojis (",(0,t.jsx)("span",{style:{fontSize:"1.2rem"},children:"\ud83d\udc69\u200d\ud83d\ude80"}),", ",(0,t.jsx)("span",{style:{fontSize:"1.2rem"},children:"\ud83c\uddeb\ud83c\uddf7"}),")\nare grapheme clusters composed of multiple scalars."]}),(0,t.jsxs)(n.p,{children:["The exact definition of grapheme clusters is determined by the Unicode Standard\n(",(0,t.jsx)(n.a,{href:"https://unicode.org/reports/tr29/",children:"UAX #29"}),") and may evolve over time as new\ncharacters, scripts, or emoji sequences are introduced. In contrast, Unicode\nscalars and their UTF-8, UTF-16, or UTF-32 encodings are fixed and stable across Unicode versions."]}),(0,t.jsx)(n.p,{children:"The table below illustrates the difference between grapheme clusters and Unicode scalars:"}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"String"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Grapheme Clusters"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Unicode Scalars (Code Points)"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,t.jsx)("span",{style:{fontSize:"1.3rem"},children:(0,t.jsx)(n.code,{children:"\xe9"})})," (NFC)"]}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)("span",{style:{fontSize:"1.3rem"},children:(0,t.jsx)(n.code,{children:'["\xe9"]'})})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"[233]"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,t.jsx)("span",{style:{fontSize:"1.3rem"},children:(0,t.jsx)(n.code,{children:"e\u0301"})})," (NFD)"]}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)("span",{style:{fontSize:"1.3rem"},children:(0,t.jsx)(n.code,{children:'["\xe9"]'})})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"[101, 769]"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)("span",{style:{fontSize:"1.3rem"},children:(0,t.jsx)(n.code,{children:"\ud83d\udc69\u200d\ud83c\udf93"})})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)("span",{style:{fontSize:"1.3rem"},children:(0,t.jsx)(n.code,{children:'["\ud83d\udc69\u200d\ud83c\udf93"]'})})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"[128105, 8205, 127891]"})})]})]})]}),(0,t.jsx)(n.p,{children:"In contrast, a Unicode scalar is a single code point in the Unicode standard,\ncorresponding to a UTF-32 value. Grapheme clusters are built from one or more scalars."}),(0,t.jsx)(n.p,{children:"This function splits a string into grapheme clusters, not scalars."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["GraphemeClusters", "Hello"]\n// \u2794 ["H", "e", "l", "l", "o"]\n\n["GraphemeClusters", "\ud83d\udc69\u200d\ud83c\udf93"]\n// \u2794 ["\ud83d\udc69\u200d\ud83c\udf93"]\n\n["UnicodeScalars", "\ud83d\udc69\u200d\ud83c\udf93"]\n// \u2794 [128105, 8205, 127891]\n'})}),(0,t.jsxs)(n.p,{children:["For more details on how grapheme cluster boundaries are determined,\nsee ",(0,t.jsx)(n.a,{href:"https://unicode.org/reports/tr29/",children:"Unicode\xae Standard Annex #29"}),"."]})]}),"\n",(0,t.jsx)("nav",{className:"hidden",children:(0,t.jsx)(n.h3,{id:"baseform",children:"BaseForm"})}),"\n",(0,t.jsxs)(s,{name:"BaseForm",children:[(0,t.jsxs)(r,{name:"BaseForm",returns:"string",children:[(0,t.jsx)(n.em,{children:"value"}),":integer"]}),(0,t.jsxs)(r,{name:"BaseForm",returns:"string",children:[(0,t.jsx)(n.em,{children:"value"}),":integer",", ",(0,t.jsx)(n.em,{children:"base"}),":integer"]}),(0,t.jsxs)(n.p,{children:["Format an ",(0,t.jsx)(n.em,{children:"integer"})," in a specific ",(0,t.jsx)(n.em,{children:"base"}),", such as hexadecimal or binary."]}),(0,t.jsxs)(n.p,{children:["If no ",(0,t.jsx)(n.em,{children:"base"})," is specified, use base-10."]}),(0,t.jsxs)(n.p,{children:["The sign of ",(0,t.jsx)(n.em,{children:"integer"})," is ignored."]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"value"})," should be an integer."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"base"})," should be an integer from 2 to 36."]}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Latex", ["BaseForm", 42, 16]]\n\n// \u2794 (\\text(2a))_{16}\n'})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cortex",children:"Latex(BaseForm(42, 16))\n// \u2794 (\\text(2a))_{16}\nString(BaseForm(42, 16))\n// \u2794 \"'0x2a'\"\n"})})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}function x(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var r=s(6540);const t={},i=r.createContext(t);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);