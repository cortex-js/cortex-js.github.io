"use strict";(self.webpackChunkcortexjs_io=self.webpackChunkcortexjs_io||[]).push([[4790],{535:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"compute-engine/reference-functions","title":"Functions","description":"The Compute Engine Standard Library includes many built-in functions such as","source":"@site/docs/compute-engine/87-reference-functions.md","sourceDirName":"compute-engine","slug":"/compute-engine/reference/functions/","permalink":"/compute-engine/reference/functions/","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1736976892000,"sidebarPosition":87,"frontMatter":{"title":"Functions","slug":"/compute-engine/reference/functions/"},"sidebar":"docSidebar","previous":{"title":"Core","permalink":"/compute-engine/reference/core/"},"next":{"title":"Linear Algebra","permalink":"/compute-engine/reference/linear-algebra/"}}');var o=s(4848),t=s(8453);const r={title:"Functions",slug:"/compute-engine/reference/functions/"},c=void 0,a={},l=[{value:"Anonymous Functions",id:"anonymous-functions",level:2},{value:"Anonymous Parameters",id:"anonymous-parameters",level:2},{value:"Evaluating an Anonymous Function",id:"evaluating-an-anonymous-function",level:2},{value:"Operating on Functions",id:"operating-on-functions",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components},{FunctionDefinition:s,Intro:i,Latex:r,ReadMore:c,Signature:a}=n;return s||h("FunctionDefinition",!0),i||h("Intro",!0),r||h("Latex",!0),c||h("ReadMore",!0),a||h("Signature",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i,{children:(0,o.jsxs)(n.p,{children:["The Compute Engine Standard Library includes many built-in functions such as\n",(0,o.jsx)(n.code,{children:"Add"}),", ",(0,o.jsx)(n.code,{children:"Sin"}),", ",(0,o.jsx)(n.code,{children:"Power"}),", etc..."]})}),"\n",(0,o.jsx)(n.p,{children:"The standard library can be extended with your own functions."}),"\n",(0,o.jsx)(c,{path:"/compute-engine/guides/augmenting/",children:(0,o.jsx)(n.p,{children:"Read more about adding new definitions to the Compute Engine."})}),"\n",(0,o.jsx)(n.h2,{id:"anonymous-functions",children:"Anonymous Functions"}),"\n",(0,o.jsxs)(n.p,{children:["A function that is not bound to an identifier is called an ",(0,o.jsx)(n.strong,{children:"anonymous\nfunction"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Anonymous functions are frequently used as arguments to other functions."}),"\n",(0,o.jsxs)(n.p,{children:["In the example below, the ",(0,o.jsx)(n.code,{children:'["Function"]'})," expression is an anonymous function\nthat is passed as an argument to the ",(0,o.jsx)(n.code,{children:'["Sum"]'})," function."]}),"\n",(0,o.jsxs)(n.p,{children:["The first argument of the ",(0,o.jsx)(n.code,{children:'["Function"]'})," expression is the body of the function,\nthe remaining arguments are the name of the parameters of the function."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Sum", ["Function", ["Multiply", "x", 2], "x"]]\n'})}),"\n",(0,o.jsxs)(n.p,{children:["To specify an anonymous function with LaTeX use the ",(0,o.jsx)(n.code,{children:"\\mapsto"})," command:"]}),"\n",(0,o.jsx)(r,{value:" x \\mapsto 2x"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Function", ["Multiply", "x", 2], "x"]\n'})}),"\n",(0,o.jsx)(r,{value:" (x, y) \\mapsto 2x + y"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Function", ["Add", ["Multiply", "x", 2], "y"], "x", "y"]\n'})}),"\n",(0,o.jsxs)(c,{path:"/compute-engine/reference/control-structures/",children:["The examples in\nthis section define functions as a simple expression, but functions can include\nmore complex control structures, including blocks, loops and conditionals. Learn\nmore about ",(0,o.jsx)(n.strong,{children:"control structures"}),". "]}),"\n",(0,o.jsx)(n.h2,{id:"anonymous-parameters",children:"Anonymous Parameters"}),"\n",(0,o.jsx)(n.p,{children:"The parameters of a function can also be anonymous."}),"\n",(0,o.jsxs)(n.p,{children:["In this case, the parameters are bound to the wildcards ",(0,o.jsx)(n.code,{children:"_"}),", ",(0,o.jsx)(n.code,{children:"_1"}),", ",(0,o.jsx)(n.code,{children:"_2"}),", etc...\nin the body of the function. The wildcard ",(0,o.jsx)(n.code,{children:"_"})," is a shorthand for ",(0,o.jsx)(n.code,{children:"_1"}),", the\nfirst parameter."]}),"\n",(0,o.jsx)(n.p,{children:"In the example below, both the function and its parameters are anonymous."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Sum", ["Multiply", "_", 2]]\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Note that as a shortcut when using anonymous parameters, the ",(0,o.jsx)(n.code,{children:'["Function"]'}),"\nexpression can be omitted."]}),"\n",(0,o.jsxs)(n.p,{children:["Anonymous parameters can also be used in LaTeX, but the anonymous parameters\nmust be wrapped with an ",(0,o.jsx)(n.code,{children:"\\operatorname"})," command except for ",(0,o.jsx)(n.code,{children:"\\_"}),"."]}),"\n",(0,o.jsx)(r,{value:" () \\mapsto \\_ + \\operatorname{\\_2}"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Function", ["Add", "_", "_2"]]\n'})}),"\n",(0,o.jsx)(n.h2,{id:"evaluating-an-anonymous-function",children:"Evaluating an Anonymous Function"}),"\n",(0,o.jsxs)(n.p,{children:["To apply a function to some arguments, use an ",(0,o.jsx)(n.code,{children:'["Apply"]'})," expression."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Apply", ["Function", ["Add", 2, "x"], "x"], 11]\n// \u2794 22\n\n["Apply", ["Add", 2, "_"], 4]\n// \u2794 6\n\n["Apply", "Power", 2, 3]\n// \u2794 8\n'})}),"\n",(0,o.jsxs)(n.p,{children:["The first argument of ",(0,o.jsx)(n.code,{children:"Apply"})," is an anonymous function, either as an\nidentifier, or as a ",(0,o.jsx)(n.code,{children:'["Function"]'})," expression. The rest of the arguments are the\narguments of the anonymous function."]}),"\n",(0,o.jsx)(n.h2,{id:"operating-on-functions",children:"Operating on Functions"}),"\n",(0,o.jsxs)(s,{name:"Function",children:[(0,o.jsx)(a,{name:"Function",children:(0,o.jsx)(n.em,{children:"body"})}),(0,o.jsxs)(a,{name:"Function",children:[(0,o.jsx)(n.em,{children:"body"}),", ",(0,o.jsx)(n.em,{children:"arg-1"}),", ",(0,o.jsx)(n.em,{children:"arg-2"}),", ..."]}),(0,o.jsxs)(n.p,{children:["Create an\n",(0,o.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Anonymous_function",children:"anonymous function"}),", also\ncalled ",(0,o.jsx)(n.strong,{children:"lambda expression"}),"."]}),(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"arg-n"})," arguments are identifiers of the bound variables (parameters) of the\nanonymous function."]}),(0,o.jsx)(n.admonition,{title:"Note",type:"info",children:(0,o.jsxs)(n.p,{children:["All the arguments have the ",(0,o.jsx)(n.code,{children:"Hold"})," attribute set, so they are not evaluated when\nthe function is created."]})}),(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.em,{children:"body"})," is a ",(0,o.jsx)(n.code,{children:"MathJSON"})," expression that is evaluated when the function is\napplied to some arguments."]}),(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"To apply some arguments to a function expression"}),", use ",(0,o.jsx)(n.code,{children:'["Apply"]'}),"."]}),(0,o.jsx)(r,{value:" x \\mapsto 2x"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Function", ["Multiply", "x", 2], "x"]\n'})}),(0,o.jsx)(r,{value:" (x, y) \\mapsto 2x + y"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Function", ["Add", ["Multiply", "x", 2], "y"], "x", "y"]\n'})})]}),"\n",(0,o.jsxs)(s,{name:"Assign",children:[(0,o.jsxs)(a,{name:"Assign",children:[(0,o.jsx)(n.em,{children:"id"}),", ",(0,o.jsx)(n.em,{children:"fn"})]}),(0,o.jsxs)(n.p,{children:["Assign the anonymous function ",(0,o.jsx)(n.em,{children:"fn"})," to the identifier ",(0,o.jsx)(n.em,{children:"id"}),"."]}),(0,o.jsxs)(n.p,{children:["The identifier ",(0,o.jsx)(n.em,{children:"id"})," should either not have been declared yet, or been declared\nas a function."]}),(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"Assign"})," is not a ",(0,o.jsx)(n.a,{href:"/compute-engine/guides/expressions#pure-expressions",children:"pure function"}),"."]}),(0,o.jsx)(r,{value:"\\operatorname{double}(x) \\coloneq 2x"}),(0,o.jsx)(r,{value:"\\operatorname{double} \\coloneq x \\mapsto 2x"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Assign", "double", ["Function", ["Multiply", "x", 2], "x"]]\n'})})]}),"\n",(0,o.jsxs)(s,{name:"Apply",children:[(0,o.jsxs)(a,{name:"Apply",children:[(0,o.jsx)(n.em,{children:"function"}),", ",(0,o.jsx)(n.em,{children:"expr-1"}),", ...",(0,o.jsx)(n.em,{children:"expr-n"})]}),(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Apply",children:"Apply"})," a list of arguments to a function.\nThe ",(0,o.jsx)(n.em,{children:"function"})," is either an identifier of a function, or a ",(0,o.jsx)(n.code,{children:'["Function"]'}),"\nexpression."]}),(0,o.jsxs)(n.p,{children:["The following wildcards in ",(0,o.jsx)(n.em,{children:"body"})," are replaced as indicated"]}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"_"})," or ",(0,o.jsx)(n.code,{children:"_1"})," : the first argument"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"_2"})," : the second argument"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"_3"})," : the third argument, etc..."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"__"}),": the sequence of arguments, so ",(0,o.jsx)(n.code,{children:'["Length", "__"]'})," is the number of\narguments"]}),"\n"]}),(0,o.jsxs)(n.p,{children:["If ",(0,o.jsx)(n.em,{children:"body"})," is a ",(0,o.jsx)(n.code,{children:'["Function"]'})," expression, the named arguments of ",(0,o.jsx)(n.code,{children:'["Function"]'}),"\nare replaced by the wildcards."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Apply", ["Multiply", "_", "_"], 3]\n// \u2794 9\n\n["Apply", ["Function", ["Multiply", "x", "x"], "x"], 3]\n// \u2794 9\n'})}),(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"\\lhd"})," and ",(0,o.jsx)(n.code,{children:"\\rhd"})," operators can be used to apply a function to a single\nargument on the left or right respectively."]}),(0,o.jsx)(r,{value:"f\\lhd g \\lhd x"}),(0,o.jsx)(r,{value:"x \\rhd g \\rhd f"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:"example",children:'["Apply", "f", ["Apply", "g", "x"]]\n'})})]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var i=s(6540);const o={},t=i.createContext(o);function r(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);